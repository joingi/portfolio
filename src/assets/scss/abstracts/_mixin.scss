// Clearfix
@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin centerVertHoriz {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}


// When using ::before and ::after you'll always need these three, so we're saving two lines of code every time you use this.x
@mixin pseudo($display: block, $pos: absolute, $content: ''){
   content: $content;
   display: $display;
   position: $pos;
}
// Example
// @mixin pseudo($display: block, $pos: absolute, $content: ''){
//    content: $content;
//    display: $display;
//    position: $pos;
// }

// We use this for creating scalable elements (usually images / background images) that maintain a ratio.
@mixin responsive-ratio($x,$y, $pseudo: false) {
    $padding: unquote( ( $y / $x ) * 100 + '%' );
    @if $pseudo {
        &:before {
            @include pseudo($pos: relative);
            width: 100%;
            padding-top: $padding;
        }
    } @else {
        padding-top: $padding;
    }
}

// MEDIA QUERIY MANAGER

/*
0 - 600px:     Phone
600 - 900px:   Tablet
900 - 1200px:  Tablet landscape
1200 - 1800px: Normal style
1800px + :     Large screen
*/

@mixin respond-phone {
  @media (max-width: 600px) {@content};
}
/*
Brakepoints:
- phone
- tab-port
- tab-land
- large-screen

ORDER: Base+Typography > General layout > Page layout > Components

 px/ 16px = em OR 1em = 16px

 */
@mixin respond($brakepoint) {
  @if $brakepoint == phone {
    @media (max-width: 37.5em) {@content}; // 600px
  }
  @if $brakepoint == tab-port {
    @media (max-width: 56.25em) {@content}; // 900px
  }
  @if $brakepoint == tab-land {
    @media (max-width: 76.3em) {@content}; // 1200px
  }
  @if $brakepoint == large-screen {
    @media (min-width: 112.5em) {@content}; // 1800px
  }
}

// Media queries OLD
// @mixin phone {
//    @media (max-width: 599px) { @content; }
//  }
//  @mixin tablet-up {
//    @media (min-width: 600px) { @content; }
//  }
//  @mixin tablet-landscape-up {
//    @media (min-width: 900px) { @content; }
//  }
//  @mixin desktop-up {
//    @media (min-width: 1200px) { @content; }
//  }
//  @mixin big-desktop-up {
//    @media (min-width: 1800px) { @content; }
//  }